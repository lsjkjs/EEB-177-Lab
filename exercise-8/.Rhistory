labels = c("'76", "'94", "'13"),
low = ("blue"), high = ("red"))
p4 +
scale_color_gradient2(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = muted("blue"),
high = muted("red"),
mid = "gray60",
midpoint = 1994)
p4 +
scale_color_gradient2(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = "blue",
high = "red",
mid = "gray60",
midpoint = 1994)
p1 <- ggplot(dat, aes(x = CPI, y = HDI, color = "Region")) + geom_point() #1. Create a scatter plot with CPI on the x axis and HDI on the y axis. Color the points to indicate region.
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis. Color the points to indicate region.
p1 <- ggplot(dat, aes(x = CPI, y = HDI) + geom_point(aes(color = Region)
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis. Color the points to indicate region.
p1 <- ggplot(dat, aes(x = CPI, y = HDI) + geom_point(aes(color = Region)
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis. Color the points to indicate region.
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point(aes(color = Region))
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis. Color the points to indicate region.
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point()
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis.
p1 + geom_point(color="blue") #2. Color the points blue.
p1 + geom_point(aes(color = Region)) #3. Map the color of the the points to Region.
p1 + geom_point(aes(color = Region), size =2) #4. Make the points bigger by setting size to 2
p1 + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") #2. Modify the x, y, and color scales so that they have more easily-understood names (e.g., spell out "Human development Index" instead of "HDI").
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point(aes(color = Region))
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis. Color the points to indicate region.
p1 + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") #2. Modify the x, y, and color scales so that they have more easily-understood names (e.g., spell out "Human development Index" instead of "HDI").
p1 + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") +
?scale_colour_manual
?scale_colour_manual
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point(aes(color = Region))
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis. Color the points to indicate region.
p1 + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") + scale_colour_manual(name = "Region") #2. Modify the x, y, and color scales so that they have more easily-understood names (e.g., spell out "Human development Index" instead of "HDI").
p1 + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") #2. Modify the x, y, and color scales so that they have more easily-understood names (e.g., spell out "Human development Index" instead of "HDI").
p1 + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") + scale_colour_manual(name = "Region", values = c("blue")) #3. Modify the color scale to use specific values of your choosing.
p1 + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") + scale_colour_manual(name = "Region", values = c("cols")) #3. Modify the color scale to use specific values of your choosing.
p1 + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") + scale_colour_manual(values = c("blue")) #3. Modify the color scale to use specific values of your choosing.
p1 + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") + scale_colour_manual(values = cols) #3. Modify the color scale to use specific values of your choosing.
ggplot(dat, aes(x=CPI, y=HDI, color=Region) + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") + scale_colour_manual(values = c("blue")) #3. Modify the color scale to use specific values of your choosing.
ggplot(dat, aes(x=CPI, y=HDI, color=Region)) + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") + scale_colour_manual(values = c("blue")) #3. Modify the color scale to use specific values of your choosing.
ggplot(dat, aes(x=CPI, y=HDI, color=Region)) + geom_point() + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") + scale_colour_manual(values = c("blue")) #3. Modify the color scale to use specific values of your choosing.
ggplot(dat, aes(x=CPI, y=HDI, color="Region")) + geom_point() + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") + scale_colour_manual(values = c("blue")) #3. Modify the color scale to use specific values of your choosing.
p5 <- ggplot(housing, aes(x = Date, y = Home.Value))
p5 + geom_line(aes(color = State))
(p5 <- p5 + geom_line() +
facet_wrap(~State, ncol = 10))
p5 + theme_linedraw()
p5 + theme_light()
p5 + theme_minimal() +
theme(text = element_text(color = "turquoise"))
theme_new <- theme_bw() +
theme(plot.background = element_rect(size = 1, color = "blue", fill = "black"),
text=element_text(size = 12, family = "Serif", color = "ivory"),
axis.text.y = element_text(colour = "purple"),
axis.text.x = element_text(colour = "red"),
panel.background = element_rect(fill = "pink"),
strip.background = element_rect(fill = muted("orange")))
theme_new <- theme_bw() +
theme(plot.background = element_rect(size = 1, color = "blue", fill = "black"),
text=element_text(size = 12, family = "Serif", color = "ivory"),
axis.text.y = element_text(colour = "purple"),
axis.text.x = element_text(colour = "red"),
panel.background = element_rect(fill = "pink"),
strip.background = element_rect(fill = "orange""))
p5 + theme_new
theme_new <- theme_bw() +
theme(plot.background = element_rect(size = 1, color = "blue", fill = "black"),
theme_new <- theme_bw() +
theme(plot.background = element_rect(size = 1, color = "blue", fill = "black"),
text=element_text(size = 12, family = "Serif", color = "ivory"),
axis.text.y = element_text(colour = "purple"),
axis.text.x = element_text(colour = "red"),
panel.background = element_rect(fill = "pink"),
strip.background = element_rect(fill = "orange"))
p5 + theme_new
library(tidyr)
home.land.byyear <- gather(housing.byyear,
value = "value",
key = "type",
Home.Value, Land.Value)
ggplot(home.land.byyear,
aes(x=Date,
y=value,
color=type)) +
geom_line()
home.land.byyear <- gather(housing.byyear,
value = "value",
key = "type",
Home.Value, Land.Value)
housing.byyear <- aggregate(cbind(Home.Value, Land.Value) ~ Date, data = housing, mean)
ggplot(housing.byyear,
aes(x=Date)) +
geom_line(aes(y=Home.Value), color="red") +
geom_line(aes(y=Land.Value), color="blue")
home.land.byyear <- gather(housing.byyear,
value = "value",
key = "type",
Home.Value, Land.Value)
ggplot(home.land.byyear,
aes(x=Date,
y=value,
color=type)) +
geom_line()
dat <- read.csv("Rgraphics/dataSets/EconomistData.csv")
p1 <- ggplot(dat, aes(x=CPI, y=HDI, color=Region)) + geom_point
p1 <- ggplot(dat, aes(x=CPI, y=HDI, color=Region)) + geom_point()
p1
p1 + geom_smooth(stat = "smooth", method = "loess")
p1 + geom_line(stat = "smooth", method = "loess")
p1 + geom_line(aes(y=HDI, color = "red", )
p1 + geom_line(aes(y=HDI, color = "red")
p1 + geom_line(aes(y=HDI, color = "red"))
p1 + geom_line(color = "red")
p1 + geom_smooth(color = "red")
p1 + geom_smooth(methon = "lm", color = "red")
p1 + geom_smooth(span = 0.3, color = "red")
p1 + geom_smooth(span = 0.4, color = "red")
p1 + geom_smooth(span = 0.5, color = "red")
p1 <- ggplot(dat, aes(x=CPI, y=HDI, color=Region)) + geom_point(size = 1)
p1
p1 <- ggplot(dat, aes(x=CPI, y=HDI, color=Region)) + geom_point(shape = 1)
p1
p1 <- ggplot(dat, aes(x=CPI, y=HDI, color=Region)) + geom_point(shape = 1, size = 3)
p1
p1 <- ggplot(dat, aes(x=CPI, y=HDI, color=Region)) + geom_point(shape = 1, size = 3, stroke = 2)
p1
p1 <- ggplot(dat, aes(x=CPI, y=HDI, color=Region)) + geom_point(shape = 1, size = 3, stroke = 1)
p1
p1 + geom_line(stat = "smooth", method = "loess", color = "red")
p1 + geom_line(stat = "smooth", method = "loess", color = "red", span = 0.3)
p1 + geom_line(stat = "smooth", method = "loess", color = "red", span = 0.6)
p1 + geom_line(stat = "smooth", method = "loess", color = "red", span = 0.5)
p1 + geom_line(stat = "smooth", method = "loess", color = "red", span = 1)
p2 + geom_text(aes(label=Country), size = 3)
head(dat)
p2 + geom_text(aes(label="Country"), size = 3)
p2 + geom_text(aes(label = Country), size = 3, color = "gray")
help.search("geom_", package = "ggplot2")
hp2001Q1 <- subset(housing, Date == 2001.25)
ggplot(hp2001Q1,
aes(y = Structure.Cost, x = Land.Value)) +
geom_point()
ggplot(hp2001Q1,
aes(y = Structure.Cost, x = log(Land.Value))) +
geom_point()
ggplot(hp2001Q1,
aes(y = Structure.Cost, x = log(Land.Value))) +
geom_point()
hp2001Q1$pred.SC <- predict(lm(Structure.Cost ~ log(Land.Value), data = hp2001Q1))
hp2001Q1$pred.SC <- predict(lm(Structure.Cost ~ log(Land.Value), data = hp2001Q1))
p1 <- ggplot(hp2001Q1, aes(x = log(Land.Value), y = Structure.Cost))
p1 + geom_point(aes(color = Home.Value)) +
geom_line(aes(y = pred.SC))
p1 +
geom_point(aes(color = Home.Value)) +
geom_smooth()
hp2001Q1$pred.SC <- predict(lm(Structure.Cost ~ log(Land.Value), data = hp2001Q1))
p1 <- ggplot(hp2001Q1, aes(x = log(Land.Value), y = Structure.Cost))
p1 + geom_point(aes(color = Home.Value)) +
geom_line(aes(y = pred.SC))
p1 +
geom_point(aes(color = Home.Value)) +
geom_smooth()
p1 +
geom_text(aes(label=State), size = 3)
library("ggrepel")
library("ggrepel")
p1 +
geom_point() +
geom_text_repel(aes(label=State), size = 3)
library("ggrepel")
p1 +
geom_point() +
geom_text_repel(aes(label=State), size = 3)
p1 +
geom_point(aes(size = 2),# incorrect! 2 is not a variable
color="red")
p1 +
geom_point(aes(size = 2),# incorrect! 2 is not a variable
color="red")
p1 +
geom_point(aes(color=Home.Value, shape = region))
library(ggplot2)
dat <- read.csv("Rgraphics/dataSets/EconomistData.csv")
head(dat)
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point()
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis.
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis.
p1 + geom_point(color="blue") #2. Color the points blue.
p1 + geom_point(color="blue") #2. Color the points blue.
p1 + geom_point(aes(color = Region)) #3. Map the color of the the points to Region.
p1 + geom_point(aes(color = Region), size =2) #4. Make the points bigger by setting size to 2
p1 + geom_point(aes(color = Region)) #3. Map the color of the the points to Region.
p1 + geom_point(aes(color = Region), size =2) #4. Make the points bigger by setting size to 2
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point(aes(shape = Region), color = "blue") #5. Map the size of the points to HDI.Rank
args(geom_histogram)
args(stat_bin)
p2 + geom_histogram()
p2 + geom_histogram()
p2 + geom_histogram(stat = "bin", binwidth=4000)
p2 + geom_histogram(stat = "bin", binwidth=4000)
housing.sum <- aggregate(housing["Home.Value"], housing["State"], FUN=mean)
rbind(head(housing.sum), tail(housing.sum))
ggplot(housing.sum, aes(x=State, y=Home.Value)) +
geom_bar(stat="identity")
ggplot(housing.sum, aes(x=State, y=Home.Value)) +
geom_bar(stat="identity")
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point() # 1. Re-create a scatter plot with CPI on the x axis and HDI on the y axis (as you did in the previous exercise).
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point() # 1. Re-create a scatter plot with CPI on the x axis and HDI on the y axis (as you did in the previous exercise).
p1 + geom_smooth() #2. Overlay a smoothing line on top of the scatter plot using geom_smooth.
p1 + geom_smooth(method = "lm") #3. Overlay a smoothing line on top of the scatter plot using geom_smooth, but use a linear model for the predictions.
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point() # 1. Re-create a scatter plot with CPI on the x axis and HDI on the y axis (as you did in the previous exercise).
p1 + geom_smooth() #2. Overlay a smoothing line on top of the scatter plot using geom_smooth.
p1 + geom_smooth(method = "lm") #3. Overlay a smoothing line on top of the scatter plot using geom_smooth, but use a linear model for the predictions.
p1 + geom_line(stat = "smooth", method = "loess") #4. Overlay a smoothing line on top of the scatter plot using geom_line. Hint: change the statistical transformation.
p1 + geom_smooth(span = 0.2) #5. BONUS: Overlay a smoothing line on top of the scatter plot using the default loess method, but make it less smooth.
p3 <- ggplot(housing,
aes(x = State,
y = Home.Price.Index)) +
theme(legend.position="top",
axis.text=element_text(size = 6))
(p4 <- p3 + geom_point(aes(color = Date),
alpha = 0.5,
size = 1.5,
position = position_jitter(width = 0.25, height = 0)))
p4 + scale_x_discrete(name="State Abbreviation") +
scale_color_continuous(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"))
p4 + scale_x_discrete(name="State Abbreviation") +
scale_color_continuous(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"))
p4 +
scale_x_discrete(name="State Abbreviation") +
scale_color_continuous(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = "blue", high = "red")
p4 +
scale_x_discrete(name="State Abbreviation") +
scale_color_continuous(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = "blue", high = "red")
p4 +
scale_color_continuous(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = ("blue"), high = ("red"))
p4 +
scale_color_continuous(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = ("blue"), high = ("red"))
p4 +
scale_color_gradient2(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = "blue",
high = "red",
mid = "gray60",
midpoint = 1994)
p4 +
scale_color_gradient2(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = "blue",
high = "red",
mid = "gray60",
midpoint = 1994)
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point(aes(color = Region))
p4 +
scale_color_gradient2(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = "blue",
high = "red",
mid = "gray60",
midpoint = 1994)
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point(aes(color = Region))
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis. Color the points to indicate region.
p1 + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") #2. Modify the x, y, and color scales so that they have more easily-understood names (e.g., spell out "Human development Index" instead of "HDI").
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis. Color the points to indicate region.
p1 + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") #2. Modify the x, y, and color scales so that they have more easily-understood names (e.g., spell out "Human development Index" instead of "HDI").
ggplot(dat, aes(x=CPI, y=HDI, color="Region")) + geom_point() + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") + scale_colour_manual(values = c("blue")) #3. Modify the color scale to use specific values of your choosing.
dat <- read.csv("Rgraphics/dataSets/EconomistData.csv")
p1 <- ggplot(dat, aes(x=CPI, y=HDI, color=Region)) + geom_point(shape = 1, size = 3, stroke = 1) #changed the colored circles to open circles
p1 + geom_line(stat = "smooth", method = "loess", color = "red", span = 1) #added trendline
p2 <- p1 + geom_line(stat = "smooth", method = "loess", color = "red", span = 1)
p2 + geom_text(aes(label = Country), size = 3, color = "gray")
p2 + geom_text(aes(label = Country), size = 3)
p2 + geom_text(aes(label = Country), size = 3, color = "black")
p2 + geom_text(aes(label = Country), size = 3, color = "black", data = subset(dat, Country %in% c("Congo", "Afghanistan", "Sudan", "Myanmar", "Iraq", "Venezuela", "Russia", "Argentina", "Greece", "Brazil", "Italy", "India", "China", "South Africa", "Rwanda", "Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Britain", "Germany", "Japan", "Brabados", "Norway", "Singapore", "New Zealand")))
p3 <- p2 + geom_text(aes(label = Country), size = 3, color = "black", data = subset(dat, Country %in% c("Congo", "Afghanistan", "Sudan", "Myanmar", "Iraq", "Venezuela", "Russia", "Argentina", "Greece", "Brazil", "Italy", "India", "China", "South Africa", "Rwanda", "Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Britain", "Germany", "Japan", "Brabados", "Norway", "Singapore", "New Zealand")))
library("ggrepel")
p2 + geom_text_repel(aes(label = Country), size = 3, color = "black", data = subset(dat, Country %in% c("Congo", "Afghanistan", "Sudan", "Myanmar", "Iraq", "Venezuela", "Russia", "Argentina", "Greece", "Brazil", "Italy", "India", "China", "South Africa", "Rwanda", "Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Britain", "Germany", "Japan", "Brabados", "Norway", "Singapore", "New Zealand"))) #added country labels
p3 <- p2 + geom_text(aes(label = Country), size = 3, color = "black", data = subset(dat, Country %in% c("Congo", "Afghanistan", "Sudan", "Myanmar", "Iraq", "Venezuela", "Russia", "Argentina", "Greece", "Brazil", "Italy", "India", "China", "South Africa", "Rwanda", "Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Britain", "Germany", "Japan", "Brabados", "Norway", "Singapore", "New Zealand")))
p2 + geom_text_repel(aes(label = Country), size = 3, color = "black", data = subset(dat, Country %in% c("Congo", "Afghanistan", "Sudan", "Myanmar", "Iraq", "Venezuela", "Russia", "Argentina", "Greece", "Brazil", "Italy", "India", "China", "South Africa", "Rwanda", "Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Britain", "Germany", "Japan", "Brabados", "Norway", "Singapore", "New Zealand"))) #added country labels
p3 + scale_x_continuous(name = "Corruption Perceptions Index, 2011 (10=least corrupt)") + scale_y_continuous(name = "Human Development Index, 2011 (1=Best)") + scale_colour_manual(values = c("blue"))
p3 + scale_x_continuous(name = "Corruption Perceptions Index, 2011 (10=least corrupt)") + scale_y_continuous(name = "Human Development Index, 2011 (1=Best)") + scale_colour_manual(values = c("darkblue", "blue", "lightblue", "green", "orange", "brown"))
p3 + scale_x_continuous(name = "Corruption Perceptions Index, 2011 (10=least corrupt)") + scale_y_continuous(name = "Human Development Index, 2011 (1=Best)") + scale_colour_manual(name = "", values = c("darkblue", "blue", "lightblue", "green", "orange", "brown"))
p3 + scale_x_continuous(name = "Corruption Perceptions Index, 2011 (10=least corrupt)") + scale_y_continuous(name = "Human Development Index, 2011 (1=Best)") + scale_colour_manual(name = "", values = c("darkblue", "blue", "lightblue", "green", "orange", "brown")) + ggtitle("Corruption and Human development"))
p3 + scale_x_continuous(name = "Corruption Perceptions Index, 2011 (10=least corrupt)") + scale_y_continuous(name = "Human Development Index, 2011 (1=Best)") + scale_colour_manual(name = "", values = c("darkblue", "blue", "lightblue", "green", "orange", "brown")) + ggtitle("Corruption and Human development")
p3 <- p2 + geom_text_repel(aes(label = Country), size = 3, color = "black", data = subset(dat, Country %in% c("Congo", "Afghanistan", "Sudan", "Myanmar", "Iraq", "Venezuela", "Russia", "Argentina", "Greece", "Brazil", "Italy", "India", "China", "South Africa", "Rwanda", "Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Britain", "Germany", "Japan", "Brabados", "Norway", "Singapore", "New Zealand")))
p3 + scale_x_continuous(name = "Corruption Perceptions Index, 2011 (10=least corrupt)") + scale_y_continuous(name = "Human Development Index, 2011 (1=Best)") + scale_colour_manual(name = "", values = c("darkblue", "blue", "lightblue", "green", "orange", "brown")) + ggtitle("Corruption and Human development")
p3 + scale_x_continuous(name = "Corruption Perceptions Index, 2011 (10=least corrupt)") + scale_y_continuous(name = "Human Development Index, 2011 (1=Best)") + scale_colour_manual(name = "", labels = c("OECD", "Americas", "Asia &\nOceania", "Central &\nEastern Europe", "Middle East &\nNorth Africa", "Sub-Saharan\nAfrica"), values = c("darkblue", "blue", "lightblue", "green", "orange", "brown")) + ggtitle("Corruption and Human development")
p4 <- p3 + scale_x_continuous(name = "Corruption Perceptions Index, 2011 (10=least corrupt)") + scale_y_continuous(name = "Human Development Index, 2011 (1=Best)") + scale_colour_manual(name = "", labels = c("OECD", "Americas", "Asia &\nOceania", "Central &\nEastern Europe", "Middle East &\nNorth Africa", "Sub-Saharan\nAfrica"), values = c("darkblue", "blue", "lightblue", "green", "orange", "brown")) + ggtitle("Corruption and Human development")
p3 + scale_x_continuous(name = "Corruption Perceptions Index, 2011 (10=least corrupt)") + scale_y_continuous(name = "Human Development Index, 2011 (1=Best)") + scale_colour_manual(name = "", labels = c("OECD", "Americas", "Asia &\nOceania", "Central &\nEastern Europe", "Middle East &\nNorth Africa", "Sub-Saharan\nAfrica"), values = c("darkblue", "blue", "lightblue", "green", "orange", "brown")) + ggtitle("Corruption and Human development") #added x,y labels and changed labels of the color scale, also assigning different regions different colors
p4 + theme(minimal)
p4 + theme_minimal()
p4 + theme_minimal() + theme(legend.position = c("top"))
p4 + theme_minimal() + theme(legend.position = c("top"), legend.direction = "horizontal", axis.text = element_text(face = "italic"))
p4 + theme_minimal() + theme(legend.position = c("top"), legend.direction = "horizontal", axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic"))
p4 + theme_minimal() + theme(legend.position = c("top"), legend.direction = "horizontal", axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic"))
p4 + theme_minimal() + theme(legend.position = c("top"), legend.box = "horizontal", axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic"))
p4 + theme_minimal() + theme(legend.position = c("top"), legend.box = "horizontal", vlegend.justification = 0.1, axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic"))
p4 + theme_minimal() + theme(legend.position = c("top"), legend.box = "horizontal", legend.justification = 0.1, axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic"))
p4 + theme_minimal() + theme(legend.position = c("top"), legend.direction = "horizontal", axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic"))
p4 + theme_minimal() + theme(legend.position = c("top"), legend.direction = "horizontal", x.intersp = 1, axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic"))
p4 + theme_minimal() + theme(legend.position = c("top"), legend.direction = "horizontal", legend.x.intersp = 1, axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic"))
p4 + theme_minimal() + theme(legend.position = c("top"), legend.direction = "horizontal", legend.key.size = 1, axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic"))
p4 + theme_minimal() + theme(legend.position = c("top"), legend.direction = "horizontal", legend.key.size = unit(2.5), axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic"))
p4 + theme_minimal() + theme(legend.position = c("top"), legend.direction = "horizontal", legend.key.size = unit(2.5, "cm"), axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic"))
p4 + theme_minimal() + theme(legend.position = c("top"), legend.direction = "horizontal", legend.key.size = unit(1, "cm"), axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic"))
p4 + theme_minimal() + theme(legend.position = c("top"), legend.direction = "horizontal", axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic")) #changed the position of the legend and italicized the axis titles
p4 + theme_minimal() + theme(legend.position = c("top"), legend.direction = "horizontal", axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic")) #changed the position of the legend and italicized the axis titles
housing <- read.csv("Rgraphics/dataSets/landdata-states.csv")
head(housing[1:5])
hist(housing$Home.Value)
library(ggplot2)
ggplot(housing, aes(x = Home.Value)) + geom_histogram()
plot(Home.Value ~ Date,
data=subset(housing, State == "MA"))
points(Home.Value ~ Date, col="red",
data=subset(housing, State == "TX"))
legend(1975, 400000,
c("MA", "TX"), title="State",
col=c("black", "red"),
pch=c(1, 1))
ggplot(subset(housing, State %in% c("MA", "TX")),
aes(x=Date,
y=Home.Value,
color=State))+
geom_point()
help.search("geom_", package = "ggplot2")
hp2001Q1 <- subset(housing, Date == 2001.25)
ggplot(hp2001Q1,
aes(y = Structure.Cost, x = Land.Value)) +
geom_point()
ggplot(hp2001Q1,
aes(y = Structure.Cost, x = log(Land.Value))) +
geom_point()
hp2001Q1$pred.SC <- predict(lm(Structure.Cost ~ log(Land.Value), data = hp2001Q1))
p1 <- ggplot(hp2001Q1, aes(x = log(Land.Value), y = Structure.Cost))
p1 + geom_point(aes(color = Home.Value)) +
geom_line(aes(y = pred.SC))
p1 +
geom_point(aes(color = Home.Value)) +
geom_smooth()
p1 +
geom_text(aes(label=State), size = 3)
library("ggrepel")
p1 +
geom_point() +
geom_text_repel(aes(label=State), size = 3)
p1 +
geom_point(aes(size = 2),# incorrect! 2 is not a variable
color="red")
p1 +
geom_point(aes(color=Home.Value, shape = region))
library(ggplot2)
dat <- read.csv("Rgraphics/dataSets/EconomistData.csv")
head(dat)
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point()
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis.
p1 + geom_point(color="blue") #2. Color the points blue.
p1 + geom_point(aes(color = Region)) #3. Map the color of the the points to Region.
p1 + geom_point(aes(color = Region), size =2) #4. Make the points bigger by setting size to 2
ggplot(dat, aes(x = CPI, y = HDI, size = HDI.Rank)) + geom_point(aes(shape = Region), color = "blue") #5. Map the size of the points to HDI.Rank
args(geom_histogram)
args(stat_bin)
p2 <- ggplot(housing, aes(x = Home.Value))
p2 + geom_histogram()
p2 + geom_histogram(stat = "bin", binwidth=4000)
housing.sum <- aggregate(housing["Home.Value"], housing["State"], FUN=mean)
rbind(head(housing.sum), tail(housing.sum))
ggplot(housing.sum, aes(x=State, y=Home.Value)) +
geom_bar(stat="identity")
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point() # 1. Re-create a scatter plot with CPI on the x axis and HDI on the y axis (as you did in the previous exercise).
p1 + geom_smooth() #2. Overlay a smoothing line on top of the scatter plot using geom_smooth.
p1 + geom_smooth(method = "lm") #3. Overlay a smoothing line on top of the scatter plot using geom_smooth, but use a linear model for the predictions.
p1 + geom_line(stat = "smooth", method = "loess") #4. Overlay a smoothing line on top of the scatter plot using geom_line. Hint: change the statistical transformation.
p1 + geom_smooth(span = 0.2) #5. BONUS: Overlay a smoothing line on top of the scatter plot using the default loess method, but make it less smooth.
p3 <- ggplot(housing,
aes(x = State,
y = Home.Price.Index)) +
theme(legend.position="top",
axis.text=element_text(size = 6))
(p4 <- p3 + geom_point(aes(color = Date),
alpha = 0.5,
size = 1.5,
position = position_jitter(width = 0.25, height = 0)))
p4 +
scale_x_discrete(name="State Abbreviation") +
scale_color_continuous(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = "blue", high = "red")
p4 +
scale_x_discrete(name="State Abbreviation") +
scale_color_continuous(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = "blue", high = "red")
p4 +
scale_color_continuous(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = ("blue"), high = ("red"))
p4 +
scale_color_continuous(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = ("blue"), high = ("red"))
p4 +
scale_color_gradient2(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = "blue",
high = "red",
mid = "gray60",
midpoint = 1994)
p4 +
scale_color_gradient2(name="",
breaks = c(1976, 1994, 2013),
labels = c("'76", "'94", "'13"),
low = "blue",
high = "red",
mid = "gray60",
midpoint = 1994)
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point(aes(color = Region))
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point(aes(color = Region))
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis. Color the points to indicate region.
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis. Color the points to indicate region.
p1 + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") #2. Modify the x, y, and color scales so that they have more easily-understood names (e.g., spell out "Human development Index" instead of "HDI").
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point(aes(color = Region))
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis. Color the points to indicate region.
p1 + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") #2. Modify the x, y, and color scales so that they have more easily-understood names (e.g., spell out "Human development Index" instead of "HDI").
ggplot(dat, aes(x=CPI, y=HDI, color="Region")) + geom_point() + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") + scale_colour_manual(values = c("blue")) #3. Modify the color scale to use specific values of your choosing.
p1 <- ggplot(dat, aes(x = CPI, y = HDI)) + geom_point(aes(color = Region))
p1 #1. Create a scatter plot with CPI on the x axis and HDI on the y axis. Color the points to indicate region.
p1 + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") #2. Modify the x, y, and color scales so that they have more easily-understood names (e.g., spell out "Human development Index" instead of "HDI").
ggplot(dat, aes(x=CPI, y=HDI, color="Region")) + geom_point() + scale_x_continuous(name = "Corruption Perception Index") + scale_y_continuous(name = "Human Development Index") + scale_colour_manual(values = c("blue")) #3. Modify the color scale to use specific values of your choosing.
p5 <- ggplot(housing, aes(x = Date, y = Home.Value))
p5 + geom_line(aes(color = State))
p5 + geom_line(aes(color = State))
(p5 <- p5 + geom_line() +
facet_wrap(~State, ncol = 10))
(p5 <- p5 + geom_line() +
facet_wrap(~State, ncol = 10))
p5 + theme_linedraw()
p5 + theme_light()
p5 + theme_light()
p5 + theme_minimal() +
theme(text = element_text(color = "turquoise"))
theme_new <- theme_bw() +
theme(plot.background = element_rect(size = 1, color = "blue", fill = "black"),
text=element_text(size = 12, family = "Serif", color = "ivory"),
axis.text.y = element_text(colour = "purple"),
axis.text.x = element_text(colour = "red"),
panel.background = element_rect(fill = "pink"),
strip.background = element_rect(fill = "orange"))
p5 + theme_new
library(tidyr)
housing.byyear <- aggregate(cbind(Home.Value, Land.Value) ~ Date, data = housing, mean)
ggplot(housing.byyear,
aes(x=Date)) +
geom_line(aes(y=Home.Value), color="red") +
geom_line(aes(y=Land.Value), color="blue")
home.land.byyear <- gather(housing.byyear,
value = "value",
key = "type",
Home.Value, Land.Value)
ggplot(home.land.byyear,
aes(x=Date,
y=value,
color=type)) +
geom_line()
dat <- read.csv("Rgraphics/dataSets/EconomistData.csv")
dat <- read.csv("Rgraphics/dataSets/EconomistData.csv")
p1 <- ggplot(dat, aes(x=CPI, y=HDI, color=Region)) + geom_point(shape = 1, size = 3, stroke = 1) #changed the colored circles to open circles
p1 + geom_line(stat = "smooth", method = "loess", color = "red", span = 1) #added trendline
p2 <- p1 + geom_line(stat = "smooth", method = "loess", color = "red", span = 1)
library("ggrepel")
p2 + geom_text_repel(aes(label = Country), size = 3, color = "black", data = subset(dat, Country %in% c("Congo", "Afghanistan", "Sudan", "Myanmar", "Iraq", "Venezuela", "Russia", "Argentina", "Greece", "Brazil", "Italy", "India", "China", "South Africa", "Rwanda", "Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Britain", "Germany", "Japan", "Brabados", "Norway", "Singapore", "New Zealand"))) #added country labels
p3 <- p2 + geom_text_repel(aes(label = Country), size = 3, color = "black", data = subset(dat, Country %in% c("Congo", "Afghanistan", "Sudan", "Myanmar", "Iraq", "Venezuela", "Russia", "Argentina", "Greece", "Brazil", "Italy", "India", "China", "South Africa", "Rwanda", "Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Britain", "Germany", "Japan", "Brabados", "Norway", "Singapore", "New Zealand")))
p3 <- p2 + geom_text_repel(aes(label = Country), size = 3, color = "black", data = subset(dat, Country %in% c("Congo", "Afghanistan", "Sudan", "Myanmar", "Iraq", "Venezuela", "Russia", "Argentina", "Greece", "Brazil", "Italy", "India", "China", "South Africa", "Rwanda", "Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Britain", "Germany", "Japan", "Brabados", "Norway", "Singapore", "New Zealand")))
p3 + scale_x_continuous(name = "Corruption Perceptions Index, 2011 (10=least corrupt)") + scale_y_continuous(name = "Human Development Index, 2011 (1=Best)") + scale_colour_manual(name = "", labels = c("OECD", "Americas", "Asia &\nOceania", "Central &\nEastern Europe", "Middle East &\nNorth Africa", "Sub-Saharan\nAfrica"), values = c("darkblue", "blue", "lightblue", "green", "orange", "brown")) + ggtitle("Corruption and Human development") #added x,y labels and changed labels of the color scale, also assigning different regions different colors
p4 <- p3 + scale_x_continuous(name = "Corruption Perceptions Index, 2011 (10=least corrupt)") + scale_y_continuous(name = "Human Development Index, 2011 (1=Best)") + scale_colour_manual(name = "", labels = c("OECD", "Americas", "Asia &\nOceania", "Central &\nEastern Europe", "Middle East &\nNorth Africa", "Sub-Saharan\nAfrica"), values = c("darkblue", "blue", "lightblue", "green", "orange", "brown")) + ggtitle("Corruption and Human development")
p3 <- p2 + geom_text_repel(aes(label = Country), size = 3, color = "black", data = subset(dat, Country %in% c("Congo", "Afghanistan", "Sudan", "Myanmar", "Iraq", "Venezuela", "Russia", "Argentina", "Greece", "Brazil", "Italy", "India", "China", "South Africa", "Rwanda", "Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Britain", "Germany", "Japan", "Brabados", "Norway", "Singapore", "New Zealand")))
p3 + scale_x_continuous(name = "Corruption Perceptions Index, 2011 (10=least corrupt)") + scale_y_continuous(name = "Human Development Index, 2011 (1=Best)") + scale_colour_manual(name = "", labels = c("OECD", "Americas", "Asia &\nOceania", "Central &\nEastern Europe", "Middle East &\nNorth Africa", "Sub-Saharan\nAfrica"), values = c("darkblue", "blue", "lightblue", "green", "orange", "brown")) + ggtitle("Corruption and Human development") #added x,y labels and changed labels of the color scale, also assigning different regions different colors
p4 <- p3 + scale_x_continuous(name = "Corruption Perceptions Index, 2011 (10=least corrupt)") + scale_y_continuous(name = "Human Development Index, 2011 (1=Best)") + scale_colour_manual(name = "", labels = c("OECD", "Americas", "Asia &\nOceania", "Central &\nEastern Europe", "Middle East &\nNorth Africa", "Sub-Saharan\nAfrica"), values = c("darkblue", "blue", "lightblue", "green", "orange", "brown")) + ggtitle("Corruption and Human development")
p4 + theme_minimal() + theme(legend.position = c("top"), legend.direction = "horizontal", axis.title.x = element_text(face = "italic"), axis.title.y = element_text(face = "italic")) #changed the position of the legend and italicized the axis titles
